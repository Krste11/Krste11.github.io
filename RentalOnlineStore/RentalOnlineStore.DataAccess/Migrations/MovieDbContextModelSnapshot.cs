// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalOnlineStore.DataAccess;

#nullable disable

namespace RentalOnlineStore.DataAccess.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    partial class MovieDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentalOnlineStore.Domain.DomainModals.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MovieId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Casts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = "1",
                            Name = "Leonardo DiCaprio",
                            Part = "Cobb"
                        },
                        new
                        {
                            Id = 2,
                            MovieId = "2",
                            Name = "Marlon Brando",
                            Part = "Don Vito Corleone"
                        });
                });

            modelBuilder.Entity("RentalOnlineStore.Domain.DomainModals.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("time");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRestriction = 13,
                            Genre = "Sci-Fi",
                            IsAvailable = true,
                            Language = "English",
                            Length = new TimeSpan(0, 2, 28, 0, 0),
                            Quantity = 5,
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            AgeRestriction = 18,
                            Genre = "Crime",
                            IsAvailable = true,
                            Language = "English",
                            Length = new TimeSpan(0, 2, 55, 0, 0),
                            Quantity = 3,
                            ReleaseDate = new DateTime(1972, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather"
                        });
                });

            modelBuilder.Entity("RentalOnlineStore.Domain.DomainModals.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            RentedOn = new DateTime(2025, 7, 12, 14, 27, 20, 888, DateTimeKind.Local).AddTicks(1823),
                            ReturnedOn = new DateTime(2025, 7, 16, 14, 27, 20, 888, DateTimeKind.Local).AddTicks(1978),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            RentedOn = new DateTime(2025, 7, 7, 14, 27, 20, 888, DateTimeKind.Local).AddTicks(2104),
                            ReturnedOn = new DateTime(2025, 7, 15, 14, 27, 20, 888, DateTimeKind.Local).AddTicks(2107),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("RentalOnlineStore.Domain.DomainModals.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSubscriptionExpired")
                        .HasColumnType("bit");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            CardNumber = "1234-5678-9012-3456",
                            CreatedOn = new DateTime(2025, 1, 17, 14, 27, 20, 885, DateTimeKind.Local).AddTicks(9452),
                            FullName = "John Doe",
                            IsSubscriptionExpired = false,
                            SubscriptionType = "Premium"
                        },
                        new
                        {
                            Id = 2,
                            Age = 30,
                            CardNumber = "9876-5432-1098-7654",
                            CreatedOn = new DateTime(2024, 7, 17, 14, 27, 20, 888, DateTimeKind.Local).AddTicks(815),
                            FullName = "Jane Smith",
                            IsSubscriptionExpired = true,
                            SubscriptionType = "Basic"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
